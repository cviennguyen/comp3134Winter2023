Write your observations for the scenarios below.
1) Navigate to the form and type a valid English word. Write your observations.
When a user navigates to the form and types a valid English word, the form would submit the input to the server for processing. The server would then return the definition of the entered word or related information.

2) Navigate to the URL and type an invalid English word after the `/browse/` section of the URL. Write your observations
f a user navigates to an invalid URL after the /browse/ section, the server would typically return an error message or redirect the user to a 404 page indicating that the resource could not be found.

3) Navigate to the form and type the following text: <script>alert(%27hello%27)</script> Write your observations.
If a user types the text <script>alert('hello')</script> into the form, it could potentially execute as a Cross-Site Scripting (XSS) attack, where the script would be executed on the client-side when the page is loaded or when the user interacts with the page. This could potentially allow an attacker to steal user credentials or perform other malicious actions. 

4) Navigate to the URL and type the following text: <script>alert(%27hello%27)</script> after the `term=` section of the URL. Write your observations.
If a user types the text <script>alert('hello')</script> into the URL after the term= section, it could also potentially execute as an XSS attack, but this time the script would be executed on the server-side when the server processes the request. This could potentially allow an attacker to take over the server or perform other malicious actions. Proper input validation and sanitization could help prevent these types of attacks.





